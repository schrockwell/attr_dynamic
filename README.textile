h1. attr_dynamic

Sugary key-value coding for Rails. Awful code; not for use by anyone.

h2. lolwut

Check out the User model...

<pre><code>class User < ActiveRecord::Base
  attr_dynamic :name, :string
  attr_dynamic :height, :integer
  attr_dynamic :birthday, :datetime
  
  validates_presence_of :name
end</pre></code>

... and its schema ...

<pre><code>create_table "users", :force => true do |t|
  t.datetime "created_at"
  t.datetime "updated_at"
end</code></pre>

What the hell is going on here? 

attr_dynamic wedges itself into ActiveRecord and pretends to have columns where they don't actually exist for that ActiveRecord table. Instead, they are stored in an auxiliary model, DynamicAttribute, which is a simple key/value pair. It has polymorphic associations, so you can apply it to any class. 

You can add tack on dynamic attributes without having to run any migrations. They default to nil.

h2. Stuff to try

Run @rails console@ and play around:

<pre><code># Create a new user
user = User.new
user.name = 'Herp Derpington'
user.height = 6
user.birthday = DateTime.now
user.save

# See WTF that user looks like
user
DynamicAttribute.count

# Null out the user height
user.height = nil
user.save

# Check out our user model again. We only have 2 dynamic_attribute rows now
user
DynamicAttribute.count</code></pre>

Pretty nifty, huh? Currently supports string, datetime, and integer data types.

You can also use @validates_presence_of@.

h2. This code sucks

Don't use it on any projects. It's mostly a proof-of-concept.